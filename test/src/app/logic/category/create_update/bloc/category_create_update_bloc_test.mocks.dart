// Mocks generated by Mockito 5.4.4 from annotations
// in ToDo/test/src/app/logic/category/create_update/bloc/category_create_update_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ToDo/src/domain/models/category/category_item.dart' as _i2;
import 'package:ToDo/src/domain/usecase/category/createupdate/category_create_or_update_usecase.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCategoryItem_0 extends _i1.SmartFake implements _i2.CategoryItem {
  _FakeCategoryItem_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CategoryCreateOrUpdateUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryCreateOrUpdateUseCase extends _i1.Mock
    implements _i3.CategoryCreateOrUpdateUseCase {
  MockCategoryCreateOrUpdateUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CategoryItem> invoke(_i2.CategoryItem? categoryItem) =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [categoryItem],
        ),
        returnValue: _i4.Future<_i2.CategoryItem>.value(_FakeCategoryItem_0(
          this,
          Invocation.method(
            #invoke,
            [categoryItem],
          ),
        )),
      ) as _i4.Future<_i2.CategoryItem>);
}
